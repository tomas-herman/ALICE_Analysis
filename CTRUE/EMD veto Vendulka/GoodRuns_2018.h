/*
info from Evgeny's AN
*/
const Int_t nGoodRunsLHC18 = 225;
Int_t GoodRunsLHC18[nGoodRunsLHC18] = {
 295585, 295586, 295587, 295588, 295589, 295612, 295615, 295665, 295666, 295667,
 295668, 295671, 295673, 295675, 295676, 295677, 295714, 295716, 295717, 295718,
 295719, 295723, 295725, 295753, 295754, 295755, 295758, 295759, 295762, 295763,
 295786, 295788, 295791, 295816, 295818, 295819, 295822, 295825, 295826, 295829,
 295831, 295854, 295855, 295856, 295859, 295860, 295861, 295863, 295881, 295908,
 295909, 295910, 295913, 295936, 295937, 295941, 295942, 295943, 295945, 295947,
 296061, 296062, 296063, 296065, 296066, 296068, 296123, 296128, 296132, 296133,
 296134, 296135, 296142, 296143, 296191, 296192, 296194, 296195, 296196, 296197,
 296198, 296241, 296242, 296243, 296244, 296246, 296247, 296269, 296270, 296273,
 296279, 296280, 296303, 296304, 296307, 296309, 296312, 296377, 296378, 296379,
 296380, 296381, 296383, 296414, 296419, 296420, 296423, 296424, 296433, 296472,
 296509, 296510, 296511, 296514, 296516, 296547, 296548, 296549, 296550, 296551,
 296552, 296553, 296615, 296616, 296618, 296619, 296622, 296623, 
 296690, 296691, 296694, 296749, 296750, 296781, 296784, 296785, 296786, 296787,
 296791, 296793, 296794, 296799, 296836, 296838, 296839, 296848, 296849, 296850,
 296851, 296852, 296890, 296894, 296899, 296900, 296903, 296930, 296931, 296932,
 296934, 296935, 296938, 296941, 296966, 296967, 296968, 296969, 296971, 296975,
 296976, 296979, 297029, 297031, 297035, 297085, 297117, 297118, 297119, 297123,
 297124, 297128, 297129, 297132, 297133, 297193, 297194, 297196, 297218, 297219,
 297221, 297222, 297278, 297310, 297312, 297315, 297317, 297363, 297366, 297367,
 297372, 297379, 297380, 297405, 297408, 297413, 297414, 297415, 297441, 297442,
 297446, 297450, 297451, 297452, 297479, 297481, 297483, 297512, 297537, 297540,
 297541, 297542, 297544, 297558, 297588, 297590, 297595};  
 
const Int_t nGoodRunsLHC18q = 128;
Int_t GoodRunsLHC18q[nGoodRunsLHC18q] = {
 295585, 295586, 295587, 295588, 295589, 295612, 295615, 295665, 295666, 295667,
 295668, 295671, 295673, 295675, 295676, 295677, 295714, 295716, 295717, 295718,
 295719, 295723, 295725, 295753, 295754, 295755, 295758, 295759, 295762, 295763,
 295786, 295788, 295791, 295816, 295818, 295819, 295822, 295825, 295826, 295829,
 295831, 295854, 295855, 295856, 295859, 295860, 295861, 295863, 295881, 295908,
 295909, 295910, 295913, 295936, 295937, 295941, 295942, 295943, 295945, 295947,
 296061, 296062, 296063, 296065, 296066, 296068, 296123, 296128, 296132, 296133,
 296134, 296135, 296142, 296143, 296191, 296192, 296194, 296195, 296196, 296197,
 296198, 296241, 296242, 296243, 296244, 296246, 296247, 296269, 296270, 296273,
 296279, 296280, 296303, 296304, 296307, 296309, 296312, 296377, 296378, 296379,
 296380, 296381, 296383, 296414, 296419, 296420, 296423, 296424, 296433, 296472,
 296509, 296510, 296511, 296514, 296516, 296547, 296548, 296549, 296550, 296551,
 296552, 296553, 296615, 296616, 296618, 296619, 296622, 296623};


Double_t muLHC18q[nGoodRunsLHC18q] = {0.00124729, 0.00111317, 0.000975906, 0.000890853, 0.000749398, 0.00103413, 0.000845836, 0.00110996, 0.000931493, 0.000527111, 0.000416196, 0.000850362, 0.000754952, 0.000703563, 0.000653167, 0.000589919, 0.00140205, 0.00127331, 0.00117132, 0.00107416, 0.000972399, 0.000788709, 0.000624573, 0.00138191, 0.00138288, 0.00133981, 0.000991233, 0.000792003, 0.000676055, 0.000620764, 0.00138461, 0.001217, 0.000841016, 0.00113583, 0.00112911, 0.00112733, 0.000996547, 0.000886462, 0.000806607, 0.000711983, 0.000648234, 0.00103973, 0.00103176, 0.00103011, 0.000990174, 0.000910016, 0.000799194, 0.000719121, 0.000612125, 0.0010408, 0.00104511, 0.00104387, 0.00103167, 0.00183007, 0.00175799, 0.00163845, 0.00152843, 0.00140838, 0.00126294, 0.00111509, 0.00194733, 0.00193975, 0.00180975, 0.00163738, 0.00153575, 0.001425, 0.00106358, 0.00106284, 0.00106225, 0.00105853, 0.00104497, 0.00083915, 0.000630493, 0.000552866, 0.00104676, 0.00104119, 0.0010561, 0.000993956, 0.000850166, 0.000675438, 0.000566047, 0.0010276, 0.00107596, 0.00107031, 0.00103334, 0.000767912, 0.000651704, 0.00108306, 0.00107846, 0.0010344, 0.000716663, 0.000638089, 0.00108571, 0.00107482, 0.00097747, 0.000762535, 0.000590763, 0.00107917, 0.00102043, 0.000765218, 0.000596695, 0.000471871, 0.000329048, 0.00108145, 0.000942206, 0.00077849, 0.000646719, 0.000565858, 0.000454063, 0.000485879, 0.00108661, 0.00107815, 0.00108226, 0.00107936, 0.00105167, 0.00108483, 0.00108018, 0.00107796, 0.000993401, 0.000755773, 0.000661504, 0.000605769, 0.00146888, 0.00146097, 0.00146286, 0.00146372, 0.00120066, 0.000997415};

Double_t WeightLHC18q[nGoodRunsLHC18q] = {0.079246, 0.238301, 0.10942, 0.135525, 0.281539, 0.448487, 0.056513, 0.33411, 0.323104, 0.0967005, 0.12972, 0.322986, 0.309614, 0.130933, 0.318185, 0.265356, 0.342801, 0.337488, 0.286325, 0.254962, 0.292224, 0.505032, 0.842873, 0.383781, 1.12026, 1.01314, 1.61536, 0.531142, 0.273865, 1.02006, 0.744934, 3.05656, 0.854061, 1.20063, 0.144591, 2.73137, 2.20493, 0.254804, 1.4746, 0.930838, 0.776369, 1.72868, 1.73872, 1.73171, 1.04724, 0.83124, 1.06367, 0.727703, 0.710035, 2.91963, 0.784779, 3.18427, 3.11896, 1.46308, 0.40298, 1.66473, 1.9099, 1.66594, 2.02686, 2.6778, 1.28995, 1.79659, 2.6825, 2.43499, 0.729509, 1.97277, 0.50428, 0.445092, 2.09955, 1.72492, 3.89479, 2.3312, 1.7811, 0.531389, 5.0323, 0.495452, 2.83386, 0.735007, 2.41332, 2.06462, 0.81056, 0.844216, 0.949921, 1.56471, 8.35804, 1.82637, 1.17385, 3.83364, 1.5096, 7.23034, 0.405, 1.60854, 2.01285, 6.11123, 2.92975, 2.09957, 2.12387, 6.07492, 5.34229, 2.09505, 2.88609, 1.43921, 1.51034, 4.86828, 2.74522, 1.40757, 1.57612, 0.385507, 4.45788, 0.861496, 2.99368, 9.06371, 2.56717, 0.489084, 0.612385, 1.08098, 1.37402, 4.85233, 3.95518, 2.01782, 0.48238, 0.705884, 1.56512, 0.538278, 2.27745, 1.55496, 0.702362, 2.15693};

const Int_t nGoodRunsLHC18r = 97;
Int_t GoodRunsLHC18r[nGoodRunsLHC18r] = {
 296690, 296691, 296694, 296749, 296750, 296781, 296784, 296785, 296786, 296787,
 296791, 296793, 296794, 296799, 296836, 296838, 296839, 296848, 296849, 296850,
 296851, 296852, 296890, 296894, 296899, 296900, 296903, 296930, 296931, 296932,
 296934, 296935, 296938, 296941, 296966, 296967, 296968, 296969, 296971, 296975,
 296976, 296979, 297029, 297031, 297035, 297085, 297117, 297118, 297119, 297123,
 297124, 297128, 297129, 297132, 297133, 297193, 297194, 297196, 297218, 297219,
 297221, 297222, 297278, 297310, 297312, 297315, 297317, 297363, 297366, 297367,
 297372, 297379, 297380, 297405, 297408, 297413, 297414, 297415, 297441, 297442,
 297446, 297450, 297451, 297452, 297479, 297481, 297483, 297512, 297537, 297540,
 297541, 297542, 297544, 297558, 297588, 297590, 297595};

Double_t muLHC18r[nGoodRunsLHC18r] = {0.00146729, 0.00146722, 0.00145673, 0.00106302, 0.00106278, 0.000954126, 0.000955676, 0.000954761, 0.000952043, 0.000954039, 0.00095665, 0.000955959, 0.000954173, 0.000931454, 0.000955646, 0.000953315, 0.000952954, 0.000956678, 0.00095258, 0.000858242, 0.000741357, 0.000681027, 0.000947252, 0.000950624, 0.000950696, 0.000947675, 0.000885466, 0.000954854, 0.000951531, 0.000952613, 0.000953289, 0.000953996, 0.000953466, 0.000942095, 0.000957372, 0.00095717, 0.00117121, 0.00116996, 0.00116988, 0.00116418, 0.00102445, 0.000670698, 0.00095215, 0.000951061, 0.000948939, 0.000959088, 0.000954913, 0.000954209, 0.000954243, 0.000953059, 0.000951614, 0.000952735, 0.000952087, 0.000882472, 0.000762419, 0.000953968, 0.000953288, 0.000937449, 0.000950628, 0.000943047, 0.000951616, 0.000922699, 0.000952349, 0.00108617, 0.00108117, 0.00107809, 0.00107722, 0.000954139, 0.000950578, 0.000950813, 0.000949519, 0.000948353, 0.000854723, 0.000951299, 0.00111795, 0.000952682, 0.000951682, 0.000932021, 0.000954079, 0.000949296, 0.000951375, 0.000950008, 0.00090804, 0.000831399, 0.000953143, 0.000952124, 0.000945071, 0.000953445, 0.000956165, 0.000950051, 0.000952073, 0.000952846, 0.000951523, 0.000809189, 0.00095556, 0.000952943, 0.000949528};

Double_t WeightLHC18r[nGoodRunsLHC18r] = {6.55479, 0.651011, 5.01923, 9.27214, 8.21311, 0.817221, 3.00028, 1.90763, 0.753376, 3.24744, 0.757909, 1.39431, 3.13555, 2.77369, 1.51066, 0.542747, 2.95299, 2.19064, 11.8232, 2.83512, 0.889359, 0.947244, 6.95781, 4.46871, 2.11558, 2.78125, 1.03832, 1.42287, 0.528829, 1.19906, 2.62915, 4.49227, 1.65039, 2.93081, 3.37345, 0.805266, 3.18556, 1.88931, 0.690036, 7.47741, 1.11813, 1.10043, 7.20121, 5.94409, 1.30575, 0.977427, 2.348, 2.44174, 2.68636, 3.37066, 0.639239, 2.40998, 2.82876, 2.81661, 1.16915, 7.63878, 9.8646, 2.12451, 6.39079, 9.29775, 2.83093, 1.69281, 0.60108, 0.670026, 2.40277, 7.93486, 4.3152, 1.89572, 2.05308, 3.11141, 3.22239, 6.92629, 1.46027, 0.5187, 4.0629, 2.99016, 2.21301, 6.76252, 4.92733, 1.9874, 8.13221, 1.95166, 1.33253, 1.15075, 7.71667, 9.55075, 1.99445, 1.58341, 1.80595, 0.62807, 3.96653, 1.5512, 7.29001, 0.47888, 5.26533, 3.14715, 1.65965};


const Int_t FirstRun = 295585;
const Int_t LastRun = 297595;
const Int_t nRuns = LastRun-FirstRun+1;
Int_t GoodRuns[nRuns];
Int_t GoodRunsIdx[nRuns];

// -> globals for mu values
Double_t mu_all[nRuns];
Double_t w_all[nRuns];

void SetGoodRunsIdx()
{
  for(Int_t i=0;i<nRuns;i++) GoodRunsIdx[i] = -1;
  for(Int_t i=0;i<nGoodRunsLHC18r;i++)
    GoodRunsIdx[GoodRunsLHC18r[i]-FirstRun] = i;
  for(Int_t i=0;i<nGoodRunsLHC18q;i++)
    GoodRunsIdx[GoodRunsLHC18q[i]-FirstRun] = i;
}

void SetGoodRuns(Int_t period)
{
  for(Int_t i=0;i<nRuns;i++) GoodRuns[i] = 0;
  if (period == 0 || period == 1) {
    for(Int_t i=0;i<nGoodRunsLHC18q;i++)
      GoodRuns[GoodRunsLHC18q[i]-FirstRun] = 1;
  }
  if (period == 0 || period == 2) {
    for(Int_t i=0;i<nGoodRunsLHC18r;i++)
      GoodRuns[GoodRunsLHC18r[i]-FirstRun] = 1;
  }
 
}

// ---------------------------------------------------------------------
void Fill_mu()
{
  for(Int_t i=0;i<nRuns;i++) mu_all[i] = 0.0;
  for(Int_t i=0;i<nGoodRunsLHC18r;i++)
    mu_all[GoodRunsLHC18r[i]-FirstRun] = muLHC18r[i];
  for(Int_t i=0;i<nGoodRunsLHC18q;i++)
    mu_all[GoodRunsLHC18q[i]-FirstRun] = muLHC18q[i];
}

// ---------------------------------------------------------------------
void Fill_w()
{
  for(Int_t i=0;i<nRuns;i++) w_all[i] = 0.0;
  for(Int_t i=0;i<nGoodRunsLHC18r;i++)
    w_all[GoodRunsLHC18r[i]-FirstRun] = WeightLHC18r[i];
  for(Int_t i=0;i<nGoodRunsLHC18q;i++)
    w_all[GoodRunsLHC18q[i]-FirstRun] = WeightLHC18q[i];
}
